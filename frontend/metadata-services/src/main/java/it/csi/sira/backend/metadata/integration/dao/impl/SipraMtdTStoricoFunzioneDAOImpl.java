/*
 * Created on 25 nov 2016 ( Time 10:35:38 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package it.csi.sira.backend.metadata.integration.dao.impl;

import java.sql.ResultSet;
import java.sql.SQLException;

import it.csi.sira.backend.metadata.integration.dto.SipraMtdTStoricoFunzione;
import it.csi.sira.backend.metadata.integration.dao.SipraMtdTStoricoFunzioneDAO;
import it.csi.sira.backend.metadata.utils.GenericDAO;
import org.springframework.jdbc.core.RowMapper;

/**
 * SipraMtdTStoricoFunzione DAO implementation 
 * 
 * @author Telosys Tools
 *
 */
public class SipraMtdTStoricoFunzioneDAOImpl extends GenericDAO<SipraMtdTStoricoFunzione> implements SipraMtdTStoricoFunzioneDAO {
	//----------------------------------------------------------------------
	/**
	 * DAO constructor
	 */
	public SipraMtdTStoricoFunzioneDAOImpl() {
		super();
	}

	private final static String QUERY_PRIMARY_KEY = 
		"select * from bifisic_mtd_t_function_history where id_function_history = :id_function_history";
	
	private final static String QUERY_INSERT = 
		"insert into bifisic_mtd_t_function_history(fk_function_type,id_function_history,request_url,fk_metadata) values(:fk_function_type,:id_function_history,:request_url,:fk_metadata)";

	private final static String QUERY_UPDATE = 
		"update bifisic_mtd_t_function_history set fk_function_type = :fk_function_type, request_url = :request_url, fk_metadata = :fk_metadata  where id_function_history = :id_function_history";

	private final static String QUERY_DELETE = 
		"delete from bifisic_mtd_t_function_history where  id_function_history = :id_function_history";

	private final static String SQL_COUNT_ALL = 
		"select count(*) from bifisic_mtd_t_function_history";
	
	@Override
	public String getPrimaryKeySelect() {
		return QUERY_PRIMARY_KEY;		
	}
	
	@Override
	public String getTableName(){
		return "bifisic_mtd_t_function_history";
	}

	@Override
	public String getSqlSelect() {
		return "select * from bifisic_mtd_t_function_history";
	}

	@Override
	public String getSqlInsert() {
		return QUERY_INSERT;
	}

	@Override
	public String getSqlUpdate() {
		return QUERY_UPDATE;
	}

	@Override
	public String getSqlDelete() {
		return QUERY_DELETE;
	}

	@Override
	public String getSqlCount() {
		return SQL_COUNT_ALL;
	}

	public SipraMtdTStoricoFunzione findByPK(Integer idStoricoFunzione) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_function_history", idStoricoFunzione);
		return super.findByPK(map);		
	}

	public int deleteByPK(Integer idStoricoFunzione) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_function_history", idStoricoFunzione);
		return super.delete(getSqlDelete(), map);		
	}

	@Override
	public java.util.Map<String, Object> getValuesForInsert(SipraMtdTStoricoFunzione sipraMtdTStoricoFunzione) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("fk_function_type", sipraMtdTStoricoFunzione.getFkTipoFunzione());
		map.put("id_function_history", sipraMtdTStoricoFunzione.getIdStoricoFunzione());
		map.put("request_url", sipraMtdTStoricoFunzione.getRequestUrl());
		map.put("fk_metadata", sipraMtdTStoricoFunzione.getFkMetadato());
		return map;
	}

	@Override
	public java.util.Map<String, Object> getValuesForUpdate(SipraMtdTStoricoFunzione sipraMtdTStoricoFunzione) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("fk_function_type", sipraMtdTStoricoFunzione.getFkTipoFunzione());
		map.put("request_url", sipraMtdTStoricoFunzione.getRequestUrl());
		map.put("fk_metadata", sipraMtdTStoricoFunzione.getFkMetadato());
		map.put("id_function_history", sipraMtdTStoricoFunzione.getIdStoricoFunzione());
		return map;
	}

	public java.util.Map<String, Object> getValuesForPrimaryKey(SipraMtdTStoricoFunzione sipraMtdTStoricoFunzione) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_function_history", sipraMtdTStoricoFunzione.getIdStoricoFunzione());
		return map;
	}

	@Override
	public java.util.Map<String, Object> getValuesForDelete(SipraMtdTStoricoFunzione sipraMtdTStoricoFunzione) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_function_history", sipraMtdTStoricoFunzione.getIdStoricoFunzione());
		return map;
	}

	@Override
	public RowMapper<SipraMtdTStoricoFunzione> getRowMapper()  {
		//--- RowMapper to populate a new bean instance
		//return new SipraMtdTStoricoFunzioneRowMapper( new SipraMtdTStoricoFunzione() ) ;

       return new SipraMtdTStoricoFunzioneRowMapper() ;
	}

	//----------------------------------------------------------------------
	/**
	 * Populates the given bean with the data retrieved from the given ResultSet
	 * @param rs
	 * @param sipraMtdTStoricoFunzione
	 * @throws SQLException
	 */
	private static void populateBean(ResultSet rs, SipraMtdTStoricoFunzione sipraMtdTStoricoFunzione) throws SQLException {

		//--- Set data from ResultSet to Bean attributes
		sipraMtdTStoricoFunzione.setFkTipoFunzione(rs.getInt("fk_function_type")); // java.lang.Integer
		if ( rs.wasNull() ) { sipraMtdTStoricoFunzione.setFkTipoFunzione(null); }; // not primitive number => keep null value if any
		sipraMtdTStoricoFunzione.setIdStoricoFunzione(rs.getInt("id_function_history")); // java.lang.Integer
		if ( rs.wasNull() ) { sipraMtdTStoricoFunzione.setIdStoricoFunzione(null); }; // not primitive number => keep null value if any
		sipraMtdTStoricoFunzione.setRequestUrl(rs.getString("request_url")); // java.lang.String
		sipraMtdTStoricoFunzione.setFkMetadato(rs.getInt("fk_metadata")); // java.lang.Integer
		if ( rs.wasNull() ) { sipraMtdTStoricoFunzione.setFkMetadato(null); }; // not primitive number => keep null value if any
	}


	/**
	 * Specific inner class for 'RowMapper' implementation
	 */
	public static class SipraMtdTStoricoFunzioneRowMapper implements RowMapper<SipraMtdTStoricoFunzione> {
	
		public SipraMtdTStoricoFunzioneRowMapper() {
			
		}
		
		public SipraMtdTStoricoFunzione mapRow(ResultSet rs, int rowNum) throws SQLException {
			SipraMtdTStoricoFunzione bean = new SipraMtdTStoricoFunzione();
			populateBean(rs, bean);
			return bean;
		}
	}
}
