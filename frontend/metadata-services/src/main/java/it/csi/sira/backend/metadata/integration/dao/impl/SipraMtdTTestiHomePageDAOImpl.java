/*
 * Created on 25 nov 2016 ( Time 10:35:38 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package it.csi.sira.backend.metadata.integration.dao.impl;

import java.sql.ResultSet;
import java.sql.SQLException;

import it.csi.sira.backend.metadata.integration.dto.SipraMtdTTestiHomePage;
import it.csi.sira.backend.metadata.integration.dao.SipraMtdTTestiHomePageDAO;
import it.csi.sira.backend.metadata.utils.GenericDAO;
import org.springframework.jdbc.core.RowMapper;
import java.util.Date;

/**
 * SipraMtdTTestiHomePage DAO implementation 
 * 
 * @author Telosys Tools
 *
 */
public class SipraMtdTTestiHomePageDAOImpl extends GenericDAO<SipraMtdTTestiHomePage> implements SipraMtdTTestiHomePageDAO {
	//----------------------------------------------------------------------
	/**
	 * DAO constructor
	 */
	public SipraMtdTTestiHomePageDAOImpl() {
		super();
	}

	private final static String QUERY_PRIMARY_KEY = 
		"select * from bifisic_mtd_t_texts_home_page where id_text = :id_text";
	
	private final static String QUERY_INSERT = 
		"insert into bifisic_mtd_t_texts_home_page(id_text,text_type,text_title,abstract_title,start_date,end_date) values(:id_text,:text_type,:text_title,:abstract_title,:start_date,:end_date)";

	private final static String QUERY_UPDATE = 
		"update bifisic_mtd_t_texts_home_page set text_type = :text_type, text_title = :text_title, abstract_title = :abstract_title, start_date = :start_date, end_date = :end_date  where id_text = :id_text";

	private final static String QUERY_DELETE = 
		"delete from bifisic_mtd_t_texts_home_page where  id_text = :id_text";

	private final static String SQL_COUNT_ALL = 
		"select count(*) from bifisic_mtd_t_texts_home_page";
	
	@Override
	public String getPrimaryKeySelect() {
		return QUERY_PRIMARY_KEY;		
	}
	
	@Override
	public String getTableName(){
		return "bifisic_mtd_t_texts_home_page";
	}

	@Override
	public String getSqlSelect() {
		return "select * from bifisic_mtd_t_texts_home_page";
	}

	@Override
	public String getSqlInsert() {
		return QUERY_INSERT;
	}

	@Override
	public String getSqlUpdate() {
		return QUERY_UPDATE;
	}

	@Override
	public String getSqlDelete() {
		return QUERY_DELETE;
	}

	@Override
	public String getSqlCount() {
		return SQL_COUNT_ALL;
	}

	public SipraMtdTTestiHomePage findByPK(Integer idTesto) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_text", idTesto);
		return super.findByPK(map);		
	}

	public int deleteByPK(Integer idTesto) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_text", idTesto);
		return super.delete(getSqlDelete(), map);		
	}

	@Override
	public java.util.Map<String, Object> getValuesForInsert(SipraMtdTTestiHomePage sipraMtdTTestiHomePage) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_text", sipraMtdTTestiHomePage.getIdTesto());
		map.put("text_type", sipraMtdTTestiHomePage.getTipoTesto());
		map.put("text_title", sipraMtdTTestiHomePage.getTitoloTesto());
		map.put("abstract_title", sipraMtdTTestiHomePage.getAbstractTesto());
		map.put("start_date", sipraMtdTTestiHomePage.getDataInizio());
		map.put("end_date", sipraMtdTTestiHomePage.getDataFine());
		return map;
	}

	@Override
	public java.util.Map<String, Object> getValuesForUpdate(SipraMtdTTestiHomePage sipraMtdTTestiHomePage) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("text_type", sipraMtdTTestiHomePage.getTipoTesto());
		map.put("text_title", sipraMtdTTestiHomePage.getTitoloTesto());
		map.put("abstract_title", sipraMtdTTestiHomePage.getAbstractTesto());
		map.put("start_date", sipraMtdTTestiHomePage.getDataInizio());
		map.put("end_date", sipraMtdTTestiHomePage.getDataFine());
		map.put("id_text", sipraMtdTTestiHomePage.getIdTesto());
		return map;
	}

	public java.util.Map<String, Object> getValuesForPrimaryKey(SipraMtdTTestiHomePage sipraMtdTTestiHomePage) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_text", sipraMtdTTestiHomePage.getIdTesto());
		return map;
	}

	@Override
	public java.util.Map<String, Object> getValuesForDelete(SipraMtdTTestiHomePage sipraMtdTTestiHomePage) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_text", sipraMtdTTestiHomePage.getIdTesto());
		return map;
	}

	@Override
	public RowMapper<SipraMtdTTestiHomePage> getRowMapper()  {
		//--- RowMapper to populate a new bean instance
		//return new SipraMtdTTestiHomePageRowMapper( new SipraMtdTTestiHomePage() ) ;

       return new SipraMtdTTestiHomePageRowMapper() ;
	}

	//----------------------------------------------------------------------
	/**
	 * Populates the given bean with the data retrieved from the given ResultSet
	 * @param rs
	 * @param sipraMtdTTestiHomePage
	 * @throws SQLException
	 */
	private static void populateBean(ResultSet rs, SipraMtdTTestiHomePage sipraMtdTTestiHomePage) throws SQLException {

		//--- Set data from ResultSet to Bean attributes
		sipraMtdTTestiHomePage.setIdTesto(rs.getInt("id_text")); // java.lang.Integer
		if ( rs.wasNull() ) { sipraMtdTTestiHomePage.setIdTesto(null); }; // not primitive number => keep null value if any
		sipraMtdTTestiHomePage.setTipoTesto(rs.getString("text_type")); // java.lang.String
		sipraMtdTTestiHomePage.setTitoloTesto(rs.getString("text_title")); // java.lang.String
		sipraMtdTTestiHomePage.setAbstractTesto(rs.getString("abstract_title")); // java.lang.String
		sipraMtdTTestiHomePage.setDataInizio(rs.getDate("start_date")); // java.util.Date
		sipraMtdTTestiHomePage.setDataFine(rs.getDate("end_date")); // java.util.Date
	}


	/**
	 * Specific inner class for 'RowMapper' implementation
	 */
	public static class SipraMtdTTestiHomePageRowMapper implements RowMapper<SipraMtdTTestiHomePage> {
	
		public SipraMtdTTestiHomePageRowMapper() {
			
		}
		
		public SipraMtdTTestiHomePage mapRow(ResultSet rs, int rowNum) throws SQLException {
			SipraMtdTTestiHomePage bean = new SipraMtdTTestiHomePage();
			populateBean(rs, bean);
			return bean;
		}
	}
}
