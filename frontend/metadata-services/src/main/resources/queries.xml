<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<entry key="GET_METADATA_OBJECTS_BY_ID_CATEGORIA">
	    <![CDATA[select distinct(c.*)
	             from bifisic_mtd_r_category_mtd a, bifisic_mtd_t_metadata b, bifisic_mtd_t_mtd_csw c, bifisic_mtd_t_function d 
		         where id_category = :id_category and 
		               b.id_metadata = a.id_metadata and 
		               c.id_metadata = b.id_metadata and
		               d.fk_metadata = b.id_metadata and
                       d.fk_function_type in (1, 2, 3)]]>
	</entry>

	<entry key="GET_METADATA_OBJECTS_BY_ID_CATEDORIA_AND_TEXT">
	    <![CDATA[select distinct(c.*) 
                 from bifisic_mtd_r_category_mtd a, bifisic_mtd_t_metadata b, bifisic_mtd_t_mtd_csw c, bifisic_mtd_t_function d 
				 where a.id_category = :id_category and 
				       b.id_metadata = a.id_metadata and 
				       c.id_metadata = b.id_metadata and
				       (upper(c.title) like upper(:text) or upper(c.text_abstract) like upper(:text)) and
                       d.fk_metadata = b.id_metadata and
                       d.fk_function_type in (1, 2, 3)				
				 UNION
				 select distinct(c.*) 
	             from bifisic_mtd_r_category_mtd a, bifisic_mtd_t_metadata b, bifisic_mtd_t_mtd_csw c, bifisic_mtd_r_keyword_mtd d, bifisic_mtd_t_keyword e, bifisic_mtd_t_function f 
				 where id_category = :id_category and 
				       b.id_metadata = a.id_metadata and 
				       c.id_metadata = b.id_metadata and
				       d.id_metadata = b.id_metadata and
				       e.id_keyword = d.id_keyword and
				       upper(e.des_keyword) like upper(:text) and 
                       f.fk_metadata = b.id_metadata and
                       f.fk_function_type in (1, 2, 3)				
				 UNION
				 select distinct(d.*) 
                 from bifisic_mtd_r_categ_language a, bifisic_mtd_t_category b, bifisic_mtd_r_category_mtd c, bifisic_mtd_t_mtd_csw d, bifisic_mtd_t_function e 
				 where a.id_category = :id_category and 
				       ((fl_alias = 'N' and upper(des_category) like upper(:text)) or (fl_alias = 'S' and upper(des_alias) like upper(:text))) and
				       b.id_category = a.id_category and
				       c.id_category = b.id_category and
				       d.id_metadata = c.id_metadata and
                       e.fk_metadata = d.id_metadata and
                       e.fk_function_type in (1, 2, 3)]]>
	</entry>
	
	<entry key="GET_METADATA_VIEWS_BY_ID_CATEGORIA">
	    <![CDATA[select distinct(c.*) 
	             from bifisic_mtd_r_category_mtd a, bifisic_mtd_t_metadata b, bifisic_mtd_t_mtd_csw c, bifisic_mtd_t_function d 
		         where id_category = :id_category and 
		               b.id_metadata = a.id_metadata and 
		               c.id_metadata = b.id_metadata and
		               d.fk_metadata = b.id_metadata and
                       d.fk_function_type in (4)]]>
	</entry>

	<entry key="GET_METADATA_VIEWS_BY_ID_CATEDORIA_AND_TEXT">
	    <![CDATA[select distinct(c.*) 
                 from bifisic_mtd_r_category_mtd a, bifisic_mtd_t_metadata b, bifisic_mtd_t_mtd_csw c, bifisic_mtd_t_function d 
				 where a.id_category = :id_category and 
				       b.id_metadata = a.id_metadata and 
				       c.id_metadata = b.id_metadata and
				       (upper(c.title) like upper(:text) or upper(c.text_abstract) like upper(:text)) and
                       d.fk_metadata = b.id_metadata and
                       d.fk_function_type in (4)				
				 UNION
				 select distinct(c.*) 
	             from bifisic_mtd_r_category_mtd a, bifisic_mtd_t_metadata b, bifisic_mtd_t_mtd_csw c, bifisic_mtd_r_keyword_mtd d, bifisic_mtd_t_keyword e, bifisic_mtd_t_function f 
				 where id_category = :id_category and 
				       b.id_metadata = a.id_metadata and 
				       c.id_metadata = b.id_metadata and
				       d.id_metadata = b.id_metadata and
				       e.id_keyword = d.id_keyword and
				       upper(e.des_keyword) like upper(:text) and 
                       f.fk_metadata = b.id_metadata and
                       f.fk_function_type in (4)				
				 UNION
				 select distinct(d.*) 
                 from bifisic_mtd_r_categ_language a, bifisic_mtd_t_category b, bifisic_mtd_r_category_mtd c, bifisic_mtd_t_mtd_csw d, bifisic_mtd_t_function e 
				 where a.id_category = :id_category and 
				       ((fl_alias = 'N' and upper(des_category) like upper(:text)) or (fl_alias = 'S' and upper(des_alias) like upper(:text))) and
				       b.id_category = a.id_category and
				       c.id_category = b.id_category and
				       d.id_metadata = c.id_metadata and
                       e.fk_metadata = d.id_metadata and
                       e.fk_function_type in (4)]]>
	</entry>	
		
	<entry key="GET_INFO_BOX">
	    <![CDATA[select upper(c.title) as title, c.text_abstract as text_abstract, c.metadata_calc_url as metadata_calc_url, d.des_datasource as des_datasource, a.last_upd_date as last_upd_date, b.object_num_dataset_calc as object_num_dataset_calc
                 from (bifisic_mtd_t_metadata a LEFT OUTER JOIN bifisic_mtd_t_mtd_plus b ON (b.id_metadata = a.id_metadata)), bifisic_mtd_t_mtd_csw c, bifisic_mtd_d_datasource d
                 where a.id_metadata = :id_metadata and
                       c.id_metadata = a.id_metadata and
                       d.id_datasource = a.fk_datasource]]>
	</entry>		
	
	<entry key="GET_SIRADEC_OBJECT_NUMBER">
	    <![CDATA[select sum(object_num_dataset_calc) as object_numbers 
	             from bifisic_mtd_t_mtd_plus]]>
	</entry>	
	
	<entry key="GET_FUNCTION_OBJECT_NUMBER">
	    <![CDATA[select count(*) as object_numbers 
                 from bifisic_mtd_t_metadata a, bifisic_mtd_t_function b
                 where b.fk_metadata = a.id_metadata and b.fk_function_type = :fk_function_type]]>
	</entry>			
	
	<entry key="GET_KEYWORD_COUNTER">
	    <![CDATA[select a.des_keyword as keyword, count(b.id_metadata) as counter
               from bifisic_mtd_t_keyword a, bifisic_mtd_r_keyword_mtd b
               where b.id_keyword = a.id_keyword
               group by des_keyword 
               order by des_keyword asc]]>
	</entry>		
	
	

		
</properties>


