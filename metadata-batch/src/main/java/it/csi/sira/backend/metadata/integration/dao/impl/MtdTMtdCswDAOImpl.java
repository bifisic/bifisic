/*
 * Created on 18 nov 2016 ( Time 17:08:44 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package it.csi.sira.backend.metadata.integration.dao.impl;

import java.sql.ResultSet;
import java.sql.SQLException;

import it.csi.sira.backend.metadata.integration.dto.MtdTMtdCsw;
import it.csi.sira.backend.metadata.integration.dao.MtdTMtdCswDAO;
import it.csi.sira.backend.metadata.utils.GenericDAO;
import org.springframework.jdbc.core.RowMapper;

/**
 * MtdTMtdCsw DAO implementation 
 * 
 * @author Telosys Tools
 *
 */
public class MtdTMtdCswDAOImpl extends GenericDAO<MtdTMtdCsw> implements MtdTMtdCswDAO {
	//----------------------------------------------------------------------
	/**
	 * DAO constructor
	 */
	public MtdTMtdCswDAOImpl() {
		super();
	}

	private final static String QUERY_PRIMARY_KEY = 
		"select * from bifisic_mtd_t_mtd_csw where id_metadata = :id_metadata";
	
	private final static String QUERY_INSERT = 
		"insert into bifisic_mtd_t_mtd_csw(id_metadata,dc_identifier,title,text_abstract,metadata_type,metadata_calc_url,bound_box_crs,bound_box_lower_corner,bound_box_upper_corner) values(:id_metadata,:dc_identifier,:title,:text_abstract,:metadata_type,:metadata_calc_url,:bound_box_crs,:bound_box_lower_corner,:bound_box_upper_corner)";

	private final static String QUERY_UPDATE = 
		"update bifisic_mtd_t_mtd_csw set dc_identifier = :dc_identifier, title = :title, text_abstract = :text_abstract, metadata_type = :metadata_type, metadata_calc_url = :metadata_calc_url, bound_box_crs = :bound_box_crs, bound_box_lower_corner = :bound_box_lower_corner, bound_box_upper_corner = :bound_box_upper_corner  where id_metadata = :id_metadata";

	private final static String QUERY_DELETE = 
		"delete from bifisic_mtd_t_mtd_csw where  id_metadata = :id_metadata";

	private final static String SQL_COUNT_ALL = 
		"select count(*) from bifisic_mtd_t_mtd_csw";
	
	@Override
	public String getPrimaryKeySelect() {
		return QUERY_PRIMARY_KEY;		
	}
	
	@Override
	public String getTableName(){
		return "bifisic_mtd_t_mtd_csw";
	}

	@Override
	public String getSqlSelect() {
		return "select * from bifisic_mtd_t_mtd_csw";
	}

	@Override
	public String getSqlInsert() {
		return QUERY_INSERT;
	}

	@Override
	public String getSqlUpdate() {
		return QUERY_UPDATE;
	}

	@Override
	public String getSqlDelete() {
		return QUERY_DELETE;
	}

	@Override
	public String getSqlCount() {
		return SQL_COUNT_ALL;
	}

	public MtdTMtdCsw findByPK(Integer idMetadato) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_metadata", idMetadato);
		return super.findByPK(map);		
	}

	public int deleteByPK(Integer idMetadato) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_metadata", idMetadato);
		return super.delete(getSqlDelete(), map);		
	}

	@Override
	public java.util.Map<String, Object> getValuesForInsert(MtdTMtdCsw MtdTMtdCsw) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_metadata", MtdTMtdCsw.getIdMetadato());
		map.put("dc_identifier", MtdTMtdCsw.getDcIdentifier());
		map.put("title", MtdTMtdCsw.getTitolo());
		map.put("text_abstract", MtdTMtdCsw.getTestoAbstract());
		map.put("metadata_type", MtdTMtdCsw.getTipoMetadato());
		map.put("metadata_calc_url", MtdTMtdCsw.getUrlMetadatoCalc());
		map.put("bound_box_crs", MtdTMtdCsw.getBoundBoxCrs());
		map.put("bound_box_lower_corner", MtdTMtdCsw.getBoundBoxLowerCorner());
		map.put("bound_box_upper_corner", MtdTMtdCsw.getBoundBoxUpperCorner());
		return map;
	}

	@Override
	public java.util.Map<String, Object> getValuesForUpdate(MtdTMtdCsw MtdTMtdCsw) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("dc_identifier", MtdTMtdCsw.getDcIdentifier());
		map.put("title", MtdTMtdCsw.getTitolo());
		map.put("text_abstract", MtdTMtdCsw.getTestoAbstract());
		map.put("metadata_type", MtdTMtdCsw.getTipoMetadato());
		map.put("metadata_calc_url", MtdTMtdCsw.getUrlMetadatoCalc());
		map.put("bound_box_crs", MtdTMtdCsw.getBoundBoxCrs());
		map.put("bound_box_lower_corner", MtdTMtdCsw.getBoundBoxLowerCorner());
		map.put("bound_box_upper_corner", MtdTMtdCsw.getBoundBoxUpperCorner());
		map.put("id_metadata", MtdTMtdCsw.getIdMetadato());
		return map;
	}

	public java.util.Map<String, Object> getValuesForPrimaryKey(MtdTMtdCsw MtdTMtdCsw) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_metadata", MtdTMtdCsw.getIdMetadato());
		return map;
	}

	@Override
	public java.util.Map<String, Object> getValuesForDelete(MtdTMtdCsw MtdTMtdCsw) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_metadata", MtdTMtdCsw.getIdMetadato());
		return map;
	}

	@Override
	public RowMapper<MtdTMtdCsw> getRowMapper()  {
		//--- RowMapper to populate a new bean instance
		//return new MtdTMtdCswRowMapper( new MtdTMtdCsw() ) ;

       return new MtdTMtdCswRowMapper() ;
	}

	//----------------------------------------------------------------------
	/**
	 * Populates the given bean with the data retrieved from the given ResultSet
	 * @param rs
	 * @param MtdTMtdCsw
	 * @throws SQLException
	 */
	private static void populateBean(ResultSet rs, MtdTMtdCsw MtdTMtdCsw) throws SQLException {

		//--- Set data from ResultSet to Bean attributes
		MtdTMtdCsw.setIdMetadato(rs.getInt("id_metadata")); // java.lang.Integer
		if ( rs.wasNull() ) { MtdTMtdCsw.setIdMetadato(null); }; // not primitive number => keep null value if any
		MtdTMtdCsw.setDcIdentifier(rs.getString("dc_identifier")); // java.lang.String
		MtdTMtdCsw.setTitolo(rs.getString("title")); // java.lang.String
		MtdTMtdCsw.setTestoAbstract(rs.getString("text_abstract")); // java.lang.String
		MtdTMtdCsw.setTipoMetadato(rs.getString("metadata_type")); // java.lang.String
		MtdTMtdCsw.setUrlMetadatoCalc(rs.getString("metadata_calc_url")); // java.lang.String
		MtdTMtdCsw.setBoundBoxCrs(rs.getString("bound_box_crs")); // java.lang.String
		MtdTMtdCsw.setBoundBoxLowerCorner(rs.getString("bound_box_lower_corner")); // java.lang.String
		MtdTMtdCsw.setBoundBoxUpperCorner(rs.getString("bound_box_upper_corner")); // java.lang.String
	}


	/**
	 * Specific inner class for 'RowMapper' implementation
	 */
	public static class MtdTMtdCswRowMapper implements RowMapper<MtdTMtdCsw> {
	
		public MtdTMtdCswRowMapper() {
			
		}
		
		public MtdTMtdCsw mapRow(ResultSet rs, int rowNum) throws SQLException {
			MtdTMtdCsw bean = new MtdTMtdCsw();
			populateBean(rs, bean);
			return bean;
		}
	}
}
