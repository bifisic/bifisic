/*
 * Created on 18 nov 2016 ( Time 17:08:44 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package it.csi.sira.backend.metadata.integration.dao.impl;

import java.sql.ResultSet;
import java.sql.SQLException;

import it.csi.sira.backend.metadata.integration.dto.SipraMtdTMetadato;
import it.csi.sira.backend.metadata.integration.dao.SipraMtdTMetadatoDAO;
import it.csi.sira.backend.metadata.utils.GenericDAO;
import org.springframework.jdbc.core.RowMapper;
import java.util.Date;

/**
 * SipraMtdTMetadato DAO implementation 
 * 
 * @author Telosys Tools
 *
 */
public class SipraMtdTMetadatoDAOImpl extends GenericDAO<SipraMtdTMetadato> implements SipraMtdTMetadatoDAO {
	//----------------------------------------------------------------------
	/**
	 * DAO constructor
	 */
	public SipraMtdTMetadatoDAOImpl() {
		super();
	}

	private final static String QUERY_PRIMARY_KEY = 
		"select * from bifisic_mtd_t_metadata where id_metadata = :id_metadata";
	
	private final static String QUERY_INSERT = 
		"insert into bifisic_mtd_t_metadata(id_metadata,fk_datasource,des_metadata,last_upd_date) values(:id_metadata,:fk_datasource,:des_metadata,:last_upd_date)";

	private final static String QUERY_UPDATE = 
		"update bifisic_mtd_t_metadata set fk_datasource = :fk_datasource, des_metadata = :des_metadata, last_upd_date = :last_upd_date  where id_metadata = :id_metadata";

	private final static String QUERY_DELETE = 
		"delete from bifisic_mtd_t_metadata where  id_metadata = :id_metadata";

	private final static String SQL_COUNT_ALL = 
		"select count(*) from bifisic_mtd_t_metadata";
	
	@Override
	public String getPrimaryKeySelect() {
		return QUERY_PRIMARY_KEY;		
	}
	
	@Override
	public String getTableName(){
		return "bifisic_mtd_t_metadata";
	}

	@Override
	public String getSqlSelect() {
		return "select * from bifisic_mtd_t_metadata";
	}

	@Override
	public String getSqlInsert() {
		return QUERY_INSERT;
	}

	@Override
	public String getSqlUpdate() {
		return QUERY_UPDATE;
	}

	@Override
	public String getSqlDelete() {
		return QUERY_DELETE;
	}

	@Override
	public String getSqlCount() {
		return SQL_COUNT_ALL;
	}

	public SipraMtdTMetadato findByPK(Integer idMetadato) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_metadata", idMetadato);
		return super.findByPK(map);		
	}

	public int deleteByPK(Integer idMetadato) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_metadata", idMetadato);
		return super.delete(getSqlDelete(), map);		
	}

	@Override
	public java.util.Map<String, Object> getValuesForInsert(SipraMtdTMetadato sipraMtdTMetadato) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_metadata", sipraMtdTMetadato.getIdMetadato());
		map.put("fk_datasource", sipraMtdTMetadato.getFkFontedati());
		map.put("des_metadata", sipraMtdTMetadato.getDesMetadato());
		map.put("last_upd_date", sipraMtdTMetadato.getDataUltAgg());
		return map;
	}

	@Override
	public java.util.Map<String, Object> getValuesForUpdate(SipraMtdTMetadato sipraMtdTMetadato) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("fk_datasource", sipraMtdTMetadato.getFkFontedati());
		map.put("des_metadata", sipraMtdTMetadato.getDesMetadato());
		map.put("last_upd_date", sipraMtdTMetadato.getDataUltAgg());
		map.put("id_metadata", sipraMtdTMetadato.getIdMetadato());
		return map;
	}

	public java.util.Map<String, Object> getValuesForPrimaryKey(SipraMtdTMetadato sipraMtdTMetadato) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_metadata", sipraMtdTMetadato.getIdMetadato());
		return map;
	}

	@Override
	public java.util.Map<String, Object> getValuesForDelete(SipraMtdTMetadato sipraMtdTMetadato) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_metadata", sipraMtdTMetadato.getIdMetadato());
		return map;
	}

	@Override
	public RowMapper<SipraMtdTMetadato> getRowMapper()  {
		//--- RowMapper to populate a new bean instance
		//return new SipraMtdTMetadatoRowMapper( new SipraMtdTMetadato() ) ;

       return new SipraMtdTMetadatoRowMapper() ;
	}

	//----------------------------------------------------------------------
	/**
	 * Populates the given bean with the data retrieved from the given ResultSet
	 * @param rs
	 * @param sipraMtdTMetadato
	 * @throws SQLException
	 */
	private static void populateBean(ResultSet rs, SipraMtdTMetadato sipraMtdTMetadato) throws SQLException {

		//--- Set data from ResultSet to Bean attributes
		sipraMtdTMetadato.setIdMetadato(rs.getInt("id_metadata")); // java.lang.Integer
		if ( rs.wasNull() ) { sipraMtdTMetadato.setIdMetadato(null); }; // not primitive number => keep null value if any
		sipraMtdTMetadato.setFkFontedati(rs.getInt("fk_datasource")); // java.lang.Integer
		if ( rs.wasNull() ) { sipraMtdTMetadato.setFkFontedati(null); }; // not primitive number => keep null value if any
		sipraMtdTMetadato.setDesMetadato(rs.getString("des_metadata")); // java.lang.String
		sipraMtdTMetadato.setDataUltAgg(rs.getDate("last_upd_date")); // java.util.Date
	}


	/**
	 * Specific inner class for 'RowMapper' implementation
	 */
	public static class SipraMtdTMetadatoRowMapper implements RowMapper<SipraMtdTMetadato> {
	
		public SipraMtdTMetadatoRowMapper() {
			
		}
		
		public SipraMtdTMetadato mapRow(ResultSet rs, int rowNum) throws SQLException {
			SipraMtdTMetadato bean = new SipraMtdTMetadato();
			populateBean(rs, bean);
			return bean;
		}
	}
}
