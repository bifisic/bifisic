/*
 * Created on 18 nov 2016 ( Time 17:08:42 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package it.csi.sira.backend.metadata.integration.dao.impl;

import java.sql.ResultSet;
import java.sql.SQLException;

import it.csi.sira.backend.metadata.integration.dto.MtdDTipoCategoria;
import it.csi.sira.backend.metadata.integration.dao.MtdDTipoCategoriaDAO;
import it.csi.sira.backend.metadata.utils.GenericDAO;
import org.springframework.jdbc.core.RowMapper;

/**
 * MtdDTipoCategoria DAO implementation 
 * 
 * @author Telosys Tools
 *
 */
public class MtdDTipoCategoriaDAOImpl extends GenericDAO<MtdDTipoCategoria> implements MtdDTipoCategoriaDAO {
	//----------------------------------------------------------------------
	/**
	 * DAO constructor
	 */
	public MtdDTipoCategoriaDAOImpl() {
		super();
	}

	private final static String QUERY_PRIMARY_KEY = 
		"select * from bifisic_mtd_d_category_type where id_category_type = :id_category_type";
	
	private final static String QUERY_INSERT = 
		"insert into bifisic_mtd_d_category_type(id_category_type,des_category_type) values(:id_category_type,:des_category_type)";

	private final static String QUERY_UPDATE = 
		"update bifisic_mtd_d_category_type set des_category_type = :des_category_type  where id_category_type = :id_category_type";

	private final static String QUERY_DELETE = 
		"delete from bifisic_mtd_d_category_type where  id_category_type = :id_category_type";

	private final static String SQL_COUNT_ALL = 
		"select count(*) from bifisic_mtd_d_category_type";
	
	@Override
	public String getPrimaryKeySelect() {
		return QUERY_PRIMARY_KEY;		
	}
	
	@Override
	public String getTableName(){
		return "bifisic_mtd_d_category_type";
	}

	@Override
	public String getSqlSelect() {
		return "select * from bifisic_mtd_d_category_type";
	}

	@Override
	public String getSqlInsert() {
		return QUERY_INSERT;
	}

	@Override
	public String getSqlUpdate() {
		return QUERY_UPDATE;
	}

	@Override
	public String getSqlDelete() {
		return QUERY_DELETE;
	}

	@Override
	public String getSqlCount() {
		return SQL_COUNT_ALL;
	}

	public MtdDTipoCategoria findByPK(Integer idTipoCategoria) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_category_type", idTipoCategoria);
		return super.findByPK(map);		
	}

	public int deleteByPK(Integer idTipoCategoria) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_category_type", idTipoCategoria);
		return super.delete(getSqlDelete(), map);		
	}

	@Override
	public java.util.Map<String, Object> getValuesForInsert(MtdDTipoCategoria MtdDTipoCategoria) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_category_type", MtdDTipoCategoria.getIdTipoCategoria());
		map.put("des_category_type", MtdDTipoCategoria.getDesTipoCategoria());
		return map;
	}

	@Override
	public java.util.Map<String, Object> getValuesForUpdate(MtdDTipoCategoria MtdDTipoCategoria) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("des_category_type", MtdDTipoCategoria.getDesTipoCategoria());
		map.put("id_category_type", MtdDTipoCategoria.getIdTipoCategoria());
		return map;
	}

	public java.util.Map<String, Object> getValuesForPrimaryKey(MtdDTipoCategoria MtdDTipoCategoria) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_category_type", MtdDTipoCategoria.getIdTipoCategoria());
		return map;
	}

	@Override
	public java.util.Map<String, Object> getValuesForDelete(MtdDTipoCategoria MtdDTipoCategoria) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_category_type", MtdDTipoCategoria.getIdTipoCategoria());
		return map;
	}

	@Override
	public RowMapper<MtdDTipoCategoria> getRowMapper()  {
		//--- RowMapper to populate a new bean instance
		//return new MtdDTipoCategoriaRowMapper( new MtdDTipoCategoria() ) ;

       return new MtdDTipoCategoriaRowMapper() ;
	}

	//----------------------------------------------------------------------
	/**
	 * Populates the given bean with the data retrieved from the given ResultSet
	 * @param rs
	 * @param MtdDTipoCategoria
	 * @throws SQLException
	 */
	private static void populateBean(ResultSet rs, MtdDTipoCategoria MtdDTipoCategoria) throws SQLException {

		//--- Set data from ResultSet to Bean attributes
		MtdDTipoCategoria.setIdTipoCategoria(rs.getInt("id_category_type")); // java.lang.Integer
		if ( rs.wasNull() ) { MtdDTipoCategoria.setIdTipoCategoria(null); }; // not primitive number => keep null value if any
		MtdDTipoCategoria.setDesTipoCategoria(rs.getString("des_category_type")); // java.lang.String
	}


	/**
	 * Specific inner class for 'RowMapper' implementation
	 */
	public static class MtdDTipoCategoriaRowMapper implements RowMapper<MtdDTipoCategoria> {
	
		public MtdDTipoCategoriaRowMapper() {
			
		}
		
		public MtdDTipoCategoria mapRow(ResultSet rs, int rowNum) throws SQLException {
			MtdDTipoCategoria bean = new MtdDTipoCategoria();
			populateBean(rs, bean);
			return bean;
		}
	}
}
