/*
 * Created on 18 nov 2016 ( Time 17:08:43 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package it.csi.sira.backend.metadata.integration.dao.impl;

import java.sql.ResultSet;
import java.sql.SQLException;

import it.csi.sira.backend.metadata.integration.dto.MtdRCategappCategori;
import it.csi.sira.backend.metadata.integration.dao.MtdRCategappCategoriDAO;
import it.csi.sira.backend.metadata.utils.GenericDAO;
import org.springframework.jdbc.core.RowMapper;

/**
 * MtdRCategappCategori DAO implementation 
 * 
 * @author Telosys Tools
 *
 */
public class MtdRCategappCategoriDAOImpl extends GenericDAO<MtdRCategappCategori> implements MtdRCategappCategoriDAO {
	//----------------------------------------------------------------------
	/**
	 * DAO constructor
	 */
	public MtdRCategappCategoriDAOImpl() {
		super();
	}

	private final static String QUERY_PRIMARY_KEY = 
		"select * from bifisic_mtd_r_categapp_category where id_category_appl = :id_category_appl and id_category = :id_category";
	
	private final static String QUERY_INSERT = 
		"insert into bifisic_mtd_r_categapp_category(id_category_appl,id_category) values(:id_category_appl,:id_category)";

	private final static String QUERY_UPDATE = 
		"update bifisic_mtd_r_categapp_category set   where id_category_appl = :id_category_appl and id_category = :id_category";

	private final static String QUERY_DELETE = 
		"delete from bifisic_mtd_r_categapp_category where  id_category_appl = :id_category_appl and id_category = :id_category";

	private final static String SQL_COUNT_ALL = 
		"select count(*) from bifisic_mtd_r_categapp_category";
	
	@Override
	public String getPrimaryKeySelect() {
		return QUERY_PRIMARY_KEY;		
	}
	
	@Override
	public String getTableName(){
		return "bifisic_mtd_r_categapp_category";
	}

	@Override
	public String getSqlSelect() {
		return "select * from bifisic_mtd_r_categapp_category";
	}

	@Override
	public String getSqlInsert() {
		return QUERY_INSERT;
	}

	@Override
	public String getSqlUpdate() {
		return QUERY_UPDATE;
	}

	@Override
	public String getSqlDelete() {
		return QUERY_DELETE;
	}

	@Override
	public String getSqlCount() {
		return SQL_COUNT_ALL;
	}

	public MtdRCategappCategori findByPK(Integer idCategoriaAppl, Integer idCategoria) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_category_appl", idCategoriaAppl);
		map.put("id_category", idCategoria);
		return super.findByPK(map);		
	}

	public int deleteByPK(Integer idCategoriaAppl, Integer idCategoria) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_category_appl", idCategoriaAppl);
		map.put("id_category", idCategoria);
		return super.delete(getSqlDelete(), map);		
	}

	@Override
	public java.util.Map<String, Object> getValuesForInsert(MtdRCategappCategori MtdRCategappCategori) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_category_appl", MtdRCategappCategori.getIdCategoriaAppl());
		map.put("id_category", MtdRCategappCategori.getIdCategoria());
		return map;
	}

	@Override
	public java.util.Map<String, Object> getValuesForUpdate(MtdRCategappCategori MtdRCategappCategori) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_category_appl", MtdRCategappCategori.getIdCategoriaAppl());
		map.put("id_category", MtdRCategappCategori.getIdCategoria());
		return map;
	}

	public java.util.Map<String, Object> getValuesForPrimaryKey(MtdRCategappCategori MtdRCategappCategori) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_category_appl", MtdRCategappCategori.getIdCategoriaAppl());
		map.put("id_category", MtdRCategappCategori.getIdCategoria());
		return map;
	}

	@Override
	public java.util.Map<String, Object> getValuesForDelete(MtdRCategappCategori MtdRCategappCategori) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_category_appl", MtdRCategappCategori.getIdCategoriaAppl());
		map.put("id_category", MtdRCategappCategori.getIdCategoria());
		return map;
	}

	@Override
	public RowMapper<MtdRCategappCategori> getRowMapper()  {
		//--- RowMapper to populate a new bean instance
		//return new MtdRCategappCategoriRowMapper( new MtdRCategappCategori() ) ;

       return new MtdRCategappCategoriRowMapper() ;
	}

	//----------------------------------------------------------------------
	/**
	 * Populates the given bean with the data retrieved from the given ResultSet
	 * @param rs
	 * @param MtdRCategappCategori
	 * @throws SQLException
	 */
	private static void populateBean(ResultSet rs, MtdRCategappCategori MtdRCategappCategori) throws SQLException {

		//--- Set data from ResultSet to Bean attributes
		MtdRCategappCategori.setIdCategoriaAppl(rs.getInt("id_category_appl")); // java.lang.Integer
		if ( rs.wasNull() ) { MtdRCategappCategori.setIdCategoriaAppl(null); }; // not primitive number => keep null value if any
		MtdRCategappCategori.setIdCategoria(rs.getInt("id_category")); // java.lang.Integer
		if ( rs.wasNull() ) { MtdRCategappCategori.setIdCategoria(null); }; // not primitive number => keep null value if any
	}


	/**
	 * Specific inner class for 'RowMapper' implementation
	 */
	public static class MtdRCategappCategoriRowMapper implements RowMapper<MtdRCategappCategori> {
	
		public MtdRCategappCategoriRowMapper() {
			
		}
		
		public MtdRCategappCategori mapRow(ResultSet rs, int rowNum) throws SQLException {
			MtdRCategappCategori bean = new MtdRCategappCategori();
			populateBean(rs, bean);
			return bean;
		}
	}
}
