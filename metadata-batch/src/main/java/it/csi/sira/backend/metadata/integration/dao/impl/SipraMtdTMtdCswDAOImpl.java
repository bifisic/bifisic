/*
 * Created on 18 nov 2016 ( Time 17:08:44 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package it.csi.sira.backend.metadata.integration.dao.impl;

import java.sql.ResultSet;
import java.sql.SQLException;

import it.csi.sira.backend.metadata.integration.dto.SipraMtdTMtdCsw;
import it.csi.sira.backend.metadata.integration.dao.SipraMtdTMtdCswDAO;
import it.csi.sira.backend.metadata.utils.GenericDAO;
import org.springframework.jdbc.core.RowMapper;

/**
 * SipraMtdTMtdCsw DAO implementation 
 * 
 * @author Telosys Tools
 *
 */
public class SipraMtdTMtdCswDAOImpl extends GenericDAO<SipraMtdTMtdCsw> implements SipraMtdTMtdCswDAO {
	//----------------------------------------------------------------------
	/**
	 * DAO constructor
	 */
	public SipraMtdTMtdCswDAOImpl() {
		super();
	}

	private final static String QUERY_PRIMARY_KEY = 
		"select * from bifisic_mtd_t_mtd_csw where id_metadata = :id_metadata";
	
	private final static String QUERY_INSERT = 
		"insert into bifisic_mtd_t_mtd_csw(id_metadata,dc_identifier,title,text_abstract,metadata_type,url_metadata_calc,bound_box_crs,bound_box_lower_corner,bound_box_upper_corner) values(:id_metadata,:dc_identifier,:title,:text_abstract,:metadata_type,:url_metadata_calc,:bound_box_crs,:bound_box_lower_corner,:bound_box_upper_corner)";

	private final static String QUERY_UPDATE = 
		"update bifisic_mtd_t_mtd_csw set dc_identifier = :dc_identifier, title = :title, text_abstract = :text_abstract, metadata_type = :metadata_type, url_metadata_calc = :url_metadata_calc, bound_box_crs = :bound_box_crs, bound_box_lower_corner = :bound_box_lower_corner, bound_box_upper_corner = :bound_box_upper_corner  where id_metadata = :id_metadata";

	private final static String QUERY_DELETE = 
		"delete from bifisic_mtd_t_mtd_csw where  id_metadata = :id_metadata";

	private final static String SQL_COUNT_ALL = 
		"select count(*) from bifisic_mtd_t_mtd_csw";
	
	@Override
	public String getPrimaryKeySelect() {
		return QUERY_PRIMARY_KEY;		
	}
	
	@Override
	public String getTableName(){
		return "bifisic_mtd_t_mtd_csw";
	}

	@Override
	public String getSqlSelect() {
		return "select * from bifisic_mtd_t_mtd_csw";
	}

	@Override
	public String getSqlInsert() {
		return QUERY_INSERT;
	}

	@Override
	public String getSqlUpdate() {
		return QUERY_UPDATE;
	}

	@Override
	public String getSqlDelete() {
		return QUERY_DELETE;
	}

	@Override
	public String getSqlCount() {
		return SQL_COUNT_ALL;
	}

	public SipraMtdTMtdCsw findByPK(Integer idMetadato) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_metadata", idMetadato);
		return super.findByPK(map);		
	}

	public int deleteByPK(Integer idMetadato) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_metadata", idMetadato);
		return super.delete(getSqlDelete(), map);		
	}

	@Override
	public java.util.Map<String, Object> getValuesForInsert(SipraMtdTMtdCsw sipraMtdTMtdCsw) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_metadata", sipraMtdTMtdCsw.getIdMetadato());
		map.put("dc_identifier", sipraMtdTMtdCsw.getDcIdentifier());
		map.put("title", sipraMtdTMtdCsw.gettitle());
		map.put("text_abstract", sipraMtdTMtdCsw.getTestoAbstract());
		map.put("metadata_type", sipraMtdTMtdCsw.getTipoMetadato());
		map.put("url_metadata_calc", sipraMtdTMtdCsw.getUrlMetadatoCalc());
		map.put("bound_box_crs", sipraMtdTMtdCsw.getBoundBoxCrs());
		map.put("bound_box_lower_corner", sipraMtdTMtdCsw.getBoundBoxLowerCorner());
		map.put("bound_box_upper_corner", sipraMtdTMtdCsw.getBoundBoxUpperCorner());
		return map;
	}

	@Override
	public java.util.Map<String, Object> getValuesForUpdate(SipraMtdTMtdCsw sipraMtdTMtdCsw) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("dc_identifier", sipraMtdTMtdCsw.getDcIdentifier());
		map.put("title", sipraMtdTMtdCsw.gettitle());
		map.put("text_abstract", sipraMtdTMtdCsw.getTestoAbstract());
		map.put("metadata_type", sipraMtdTMtdCsw.getTipoMetadato());
		map.put("url_metadata_calc", sipraMtdTMtdCsw.getUrlMetadatoCalc());
		map.put("bound_box_crs", sipraMtdTMtdCsw.getBoundBoxCrs());
		map.put("bound_box_lower_corner", sipraMtdTMtdCsw.getBoundBoxLowerCorner());
		map.put("bound_box_upper_corner", sipraMtdTMtdCsw.getBoundBoxUpperCorner());
		map.put("id_metadata", sipraMtdTMtdCsw.getIdMetadato());
		return map;
	}

	public java.util.Map<String, Object> getValuesForPrimaryKey(SipraMtdTMtdCsw sipraMtdTMtdCsw) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_metadata", sipraMtdTMtdCsw.getIdMetadato());
		return map;
	}

	@Override
	public java.util.Map<String, Object> getValuesForDelete(SipraMtdTMtdCsw sipraMtdTMtdCsw) {
		java.util.Map<String, Object> map = new java.util.HashMap<String, Object>();
		map.put("id_metadata", sipraMtdTMtdCsw.getIdMetadato());
		return map;
	}

	@Override
	public RowMapper<SipraMtdTMtdCsw> getRowMapper()  {
		//--- RowMapper to populate a new bean instance
		//return new SipraMtdTMtdCswRowMapper( new SipraMtdTMtdCsw() ) ;

       return new SipraMtdTMtdCswRowMapper() ;
	}

	//----------------------------------------------------------------------
	/**
	 * Populates the given bean with the data retrieved from the given ResultSet
	 * @param rs
	 * @param sipraMtdTMtdCsw
	 * @throws SQLException
	 */
	private static void populateBean(ResultSet rs, SipraMtdTMtdCsw sipraMtdTMtdCsw) throws SQLException {

		//--- Set data from ResultSet to Bean attributes
		sipraMtdTMtdCsw.setIdMetadato(rs.getInt("id_metadata")); // java.lang.Integer
		if ( rs.wasNull() ) { sipraMtdTMtdCsw.setIdMetadato(null); }; // not primitive number => keep null value if any
		sipraMtdTMtdCsw.setDcIdentifier(rs.getString("dc_identifier")); // java.lang.String
		sipraMtdTMtdCsw.settitle(rs.getString("title")); // java.lang.String
		sipraMtdTMtdCsw.setTestoAbstract(rs.getString("text_abstract")); // java.lang.String
		sipraMtdTMtdCsw.setTipoMetadato(rs.getString("metadata_type")); // java.lang.String
		sipraMtdTMtdCsw.setUrlMetadatoCalc(rs.getString("url_metadata_calc")); // java.lang.String
		sipraMtdTMtdCsw.setBoundBoxCrs(rs.getString("bound_box_crs")); // java.lang.String
		sipraMtdTMtdCsw.setBoundBoxLowerCorner(rs.getString("bound_box_lower_corner")); // java.lang.String
		sipraMtdTMtdCsw.setBoundBoxUpperCorner(rs.getString("bound_box_upper_corner")); // java.lang.String
	}


	/**
	 * Specific inner class for 'RowMapper' implementation
	 */
	public static class SipraMtdTMtdCswRowMapper implements RowMapper<SipraMtdTMtdCsw> {
	
		public SipraMtdTMtdCswRowMapper() {
			
		}
		
		public SipraMtdTMtdCsw mapRow(ResultSet rs, int rowNum) throws SQLException {
			SipraMtdTMtdCsw bean = new SipraMtdTMtdCsw();
			populateBean(rs, bean);
			return bean;
		}
	}
}
